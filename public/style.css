body {
    background-color: #01010a;
}

/* ############################ 
  Simbolos e cabos da arquitetura
   ########################## */

.bh {
   background-color: white;
   clip-path: polygon(0 100%, 100% 100%, 100% 95%, 0 95%); 
}

.bh-to-mv {
    background-color: white;
    clip-path: polygon(0 100%, 52.5% 100%, 52.5% 0, 47.5% 0, 47.5% 95%, 0 95%);
}

.mv {
    background-color: white;
    clip-path: polygon(47.5% 0, 47.5% 100%, 52.5% 100%, 52.5% 0);
}

.mh {
    background-color: white;
    clip-path: polygon(0 47.5%, 100% 47.5%, 100% 52.5%, 0 52.5%);
}

.half-mhr {
    background-color: white;
    clip-path: polygon(47.5% 47.5%, 47.5% 52.5%, 100% 52.5%, 100% 47.5%);
}

.mvb-to-mhl {
    background-color: white;
    clip-path: polygon(47.5% 100%, 52.5% 100%, 52.5% 47.5%, 0% 47.5%, 0 52.5%, 47.5% 52.5%);
}

.mvb-to-mhr {
    background-color: white;
    clip-path: polygon(47.5% 100%, 47.5% 47.5%, 100% 47.5%, 100% 52.5%, 52.5% 52.5%, 52.5% 100%);
}

.mhr-to-qrvb {
    background-color: white;
    clip-path: polygon(100% 47.5%, 70% 47.5%, 70% 100%, 75% 100%, 75% 52.5%, 100% 52.5%);
}

.qlv {
    background-color: white;
    clip-path: polygon(
        20% 0, 25% 0, 
        25% 100%, 20% 100%
    );
}

.qrv {
    background-color: white;
    clip-path: polygon(
        70% 0, 75% 0%, 
        75% 100%, 70% 100%
        );
}

.qrvt-to-mhr {
    background-color: white;
    clip-path: polygon(70% 0, 70% 52.5%, 100% 52.5%, 100% 47.5%, 75% 47.5%, 75% 0%);
}

/* Faz o simbolo da ula*/
.alu-symbol {
    background-color: white;
    clip-path: polygon(0 0, 100% 25%, 100% 75%, 0 100%, 0 60%, 25% 50%, 0 40%);
}

/* Faz o simbolo do mux */
.mux-symbol {
    background-color: white;
    border: none;
    border-radius: 9999px;
}

/* Caixa de entradas e saidas de um blocco */
.block-box {
    background-color: black;
    border: 0.1vw white solid;
}

/* Fonte do nome do bloco dentro de um bloco*/
.block-name {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 0.9vw;
    color: white;
    font-weight: bold;
    align-content: center;
    margin: auto
}

/* Texto da entra/saida de um bloco */
.block-entry-exit {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 0.8vw;
    color: white;
    align-content: center;
    margin: auto
}

.and-gate {
    background-color: white;
    clip-path: ellipse(100% 50% at 0 50%);
}

/* ############################ 
  Componentes e cabos da arquitetura
   ########################## */
#architecture-grid {
    display: grid;
    grid-template-columns: repeat(32, 3.125%);
    grid-template-rows: repeat(16, 6.25vh);
}

/* ####If ### */

#pcp-4_8_4 {
    grid-column: 8;
    grid-row: 4;
}

#pcp-4_8_3 {
    grid-column: 8;
    grid-row: 3;
}

#pcp-4_2-7_3 {
    grid-column-start: 2;
    grid-column-end: 8;

    grid-row: 3;
}

#pcp-4_1_3 {
    grid-column: 1;
    grid-row: 3;
}

#pcp-4_1_4-8 {
    grid-column: 1;
    grid-row-start: 4;
    grid-row-end: 9;
}

#pcp-4_1_9 {
    grid-column: 1;
    grid-row: 9;
}

#pc-src {
    grid-column: 2;

    grid-row-start: 9;
    grid-row-end: 11;
}

#mux-to-pc {
    grid-row: 9;
    grid-column: 3;
}

#prg-counter {
    grid-column: 4;

    grid-row-start: 9;
    grid-row-end: 11;

    display: flex;
}

#pc-to-instmem {
    grid-column: 5;
    grid-row: 9;
}

#pc-tt_5_5-9 {
    grid-column: 5;
    
    grid-row-start: 5;
    grid-row-end: 10;
}

#pc-tt_5_4 {
    grid-column: 5;
    grid-row: 4;
}

#pc-tt_6_4 {
    grid-column: 6;
    grid-row: 4;
}

#pc-tt_5_6 {
    grid-column: 5;
    grid-row: 6;
}

#pc-tt_6-8_6 {
    grid-column-start: 6;
    grid-column-end: 9;

    grid-row: 6;
}

#four-to-add {
    grid-column: 6;
    grid-row: 5;
}

#inst-mem {
    grid-column-start: 6;
    grid-column-end: 8;

    grid-row-start: 8;
    grid-row-end: 11;

    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 1fr);
}

#inst-mem :nth-child(1) {
    grid-column-start: 1;
    grid-column-end: 3;

    grid-row: 1;
}

#inst-mem :nth-child(2) {
    grid-column: 1;

    grid-row-start: 2;
    grid-row-end: 4;
}

#inst-mem-to-pipe {
    grid-column: 8;
    grid-row: 9;
}

#pc4 {
    grid-column: 7;

    grid-row-start: 4;
    grid-row-end: 6;
}

#reg-if-id {
    grid-column: 9;

    grid-row-start: 6;
    grid-row-end: 12;

    display: grid;
    grid-template-rows: repeat(6, 1fr);
}

#reg-if-id :nth-child(1) {
    grid-row: 1;
}

#reg-if-id :nth-child(2) {
    grid-row-start: 4;
    grid-row-end: 6;
}

/* ### Fim do if ###*/
/* ####Id ### */

#bco-reg {
    grid-column-start: 12;
    grid-column-end: 15;
    grid-row-start: 7;
    grid-row-end: 12;

    display: grid;
    grid-template-rows: repeat(5, 1fr);
    grid-template-columns: 1fr 1fr 1fr;
}

#bco-reg :nth-child(1) {
    grid-row: 5;
    grid-column-start: 1;
    grid-column-end: 4;
}

#bco-reg :nth-child(2) {
    grid-row: 1;
}

#bco-reg :nth-child(3) {
    grid-row: 2;
}

#bco-reg :nth-child(4) {
    grid-row: 3;
}

#bco-reg :nth-child(5) {
    grid-row: 4;
    grid-column-start: 1;
    grid-column-end: 3;
}

#bco-reg :nth-child(6) {
    grid-row: 1;
    grid-column: 3;
}

#bco-reg :nth-child(7) {
    grid-row: 4;
    grid-column: 3;
}

#cu {
    grid-column-start: 12;
    grid-column-end: 15;
    grid-row-start: 2;
    grid-row-end: 5;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
}

#cu :nth-child(1) {
    grid-row: 1;
    grid-column-start: 1;
    grid-column-end: 3;
}

#cu :nth-child(2) {
    grid-row: 1;
    grid-column: 3;
}

#cu :nth-child(3) {
    grid-row: 2;
    grid-column: 3;
}

#cu :nth-child(4) {
    grid-row: 3;
    grid-column: 3;
}

#imm-gen {
    grid-column-start: 13;
    grid-column-end: 15;
    grid-row: 13;

    display: flex;
}

#reg-id {
    grid-column: 16;
    grid-row-start: 2;
    grid-row-end: 16;

    display: grid;
    grid-template-rows: repeat(14, 1fr);
}

#reg-id :nth-child(5) {
    grid-row: 6;
}

#reg-id :nth-child(6) {
    grid-row: 9;
}

#reg-id :nth-child(7) {
    grid-row: 12;
}

#reg-id :nth-child(8) {
    grid-row: 13;
}

#reg-id :nth-child(9) {
    grid-row: 14;
}


/* ### Fim do id ###*/

/* ###Ex */

#pc-plus-imm {
    grid-column: 18;
    grid-row-start: 5;
    grid-row-end: 7;
}

#alu-src-mux {
    grid-column: 18;
    grid-row-start: 9;
    grid-row-end: 11;
}

#alu-ctrl {
    grid-column-start: 20;
    grid-column-end: 22;
    grid-row: 14;

    display: flex;
}

#alu {
    grid-column-start: 20;
    grid-column-end: 22;
    grid-row-start: 7;
    grid-row-end: 11;
}

#reg-ex {
    grid-column: 23;
    grid-row-start: 2;
    grid-row-end: 16;

    display: grid;
    grid-template-rows: repeat(14, 1fr);
}

#reg-ex :nth-child(2) {
    grid-row-start: 2;
    grid-row-end: 4;
}

#reg-ex :nth-child(3) {
    grid-row-start: 4;
    grid-row-end: 6; 
}

#reg-ex :nth-child(4) {
    grid-row: 7; 
}

#reg-ex :nth-child(5) {
    grid-row: 8; 
}

#reg-ex :nth-child(6) {
    grid-row: 14; 
}
/* ### Fim do ex ###*/

/* ###Mem ###*/

#and-branch {
    grid-column: 25;
    grid-row: 7;
}

#memory {
    grid-column-start: 25;
    grid-column-end: 28;
    grid-row-start: 9;
    grid-row-end: 12;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
}

#memory :nth-child(1) {
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row: 2;
}

#memory :nth-child(2) {
    grid-column-start: 1;
    grid-column-end: 3;
    grid-row: 1;
}

#memory :nth-child(3) {
    grid-column-start: 1;
    grid-column-end: 3;
    grid-row: 3;
}

#reg-mem {
    grid-column: 29;
    grid-row-start: 2;
    grid-row-end: 16;

    display: grid;
    grid-template-rows: repeat(14, 1fr);
}

#reg-mem :nth-child(2) {
    grid-row: 9;
}

#reg-mem :nth-child(3) {
    grid-row: 12;
}

/* ### Fim do mem ###*/

/* ###Wb ###*/

#data-select-mux {
    grid-column: 31;
    grid-row-start: 10;
    grid-row-end: 12;
}